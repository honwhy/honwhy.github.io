---
interface Flashcard {
	front: string;
	back: string;
}

interface Props {
	cards: Flashcard[];
}

const { cards } = Astro.props;
---

<div class="slideshow-wrapper">
	<div class="slideshow-header">
		<p>按空格键可将抽认卡翻面，按 “←/→” 可浏览卡片</p>
	</div>
	<div class="slideshow-container">
		<div class="slideshow-nav left-nav">
			<button id="prev-button" aria-label="上一张卡片">&larr;</button>
		</div>

		<div class="flashcard-stack">
			{
				cards.map((card, index) => (
					<div class="flashcard-slide" data-index={index}>
						<div class="flashcard">
							<div class="flashcard-face flashcard-front">
								<p>{card.front}</p>
								<div class="hint">查看答案</div>
							</div>
							<div class="flashcard-face flashcard-back">
								<p>{card.back}</p>
							</div>
						</div>
					</div>
				))
			}
			<div class="congratulations-slide">
				<div class="congratulations-content">
					<h2>做得很棒 🎉！</h2>
				</div>
			</div>
		</div>

		<div class="slideshow-nav right-nav">
			<button id="next-button" aria-label="下一张卡片">&rarr;</button>
		</div>
	</div>

	<div class="slideshow-footer">
		<button id="reset-button" aria-label="重置学习进度">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="2"
				stroke-linecap="round"
				stroke-linejoin="round"
			>
				<path d="M2.5 2v6h6M2.5 12a9.5 9.5 0 1 0 5-8.5"></path>
			</svg>
		</button>
		<div class="progress-bar-container">
			<div id="progress-bar" class="progress-bar"></div>
		</div>
		<div class="card-count">
			<span id="current-card">1</span> / <span id="total-cards">{cards.length}</span> 张卡片
		</div>
	</div>
</div>

<script is:inline>
	document.addEventListener("DOMContentLoaded", () => {
		const slideshow = document.querySelector(".slideshow-wrapper");
		if (!slideshow) return;

		const flashcardStack = slideshow.querySelector(".flashcard-stack");
		const slides = slideshow.querySelectorAll(".flashcard-slide");
		const congratulationsSlide = slideshow.querySelector(".congratulations-slide");
		const nextButton = slideshow.querySelector("#next-button");
		const prevButton = slideshow.querySelector("#prev-button");
		const resetButton = slideshow.querySelector("#reset-button");
		const currentCardSpan = slideshow.querySelector("#current-card");
		const progressBar = slideshow.querySelector("#progress-bar");

		let currentIndex = 0;
		const totalCards = slides.length;

		const updateDisplay = () => {
			slides.forEach((slide, index) => {
				const isActive = index === currentIndex;
				slide.classList.toggle("active", isActive);
				// 重置所有卡片翻转状态
				slide.querySelector(".flashcard").classList.remove("is-flipped");

				// 基于索引应用堆叠样式
				const offset = index - currentIndex;
				if (offset === 0) {
					// 当前卡片
					slide.style.transform = "translateY(0px) scale(1)";
					slide.style.opacity = "1";
					slide.style.zIndex = "10";
				} else if (offset > 0 && offset <= 2) {
					// 后面两张卡片进行堆叠
					slide.style.transform = `translateY(${6 * offset}px) scale(${1 - offset * 0.02})`; // 每次向下偏移6px，缩小2%
					slide.style.opacity = "0.5"; // 后面的卡片半透明
					slide.style.zIndex = `${10 - offset}`;
				} else {
					// 更远的卡片完全隐藏
					slide.style.transform = "translateY(0px) scale(1)";
					slide.style.opacity = "0";
					slide.style.zIndex = "1"; // 确保不遮挡
				}
			});

			congratulationsSlide.classList.toggle("active", currentIndex >= totalCards);

			// 更新导航按钮状态
			prevButton.disabled = currentIndex <= 0;
			nextButton.disabled = currentIndex >= totalCards;

			// 更新进度条和计数器
			const progress = totalCards > 0 ? (currentIndex + 1) / totalCards : 1;
			progressBar.style.width = `${Math.min(progress, 1) * 100}%`; // 确保进度条不超过100%
			currentCardSpan.textContent = Math.min(currentIndex + 1, totalCards);
		};

		const nextCard = (e) => {
			e.preventDefault();
			if (currentIndex < totalCards) {
				currentIndex++;
				updateDisplay();
			}
		};

		const prevCard = (e) => {
			e.preventDefault();
			if (currentIndex > 0) {
				currentIndex--;
				updateDisplay();
			}
		};

		const flipCard = (target) => {
			target.closest(".flashcard").classList.toggle("is-flipped");
		};

		const resetSlideshow = (e) => {
			e.preventDefault();
			currentIndex = 0;
			updateDisplay();
		};

		// 事件监听
		nextButton.addEventListener("click", nextCard);
		prevButton.addEventListener("click", prevCard);
		resetButton.addEventListener("click", resetSlideshow);

		flashcardStack.addEventListener("click", (event) => {
			// 只有点击当前活跃卡片的正面或背面才翻转
			const activeCard = slideshow.querySelector(".flashcard-slide.active .flashcard");
			if (activeCard && event.target.closest(".flashcard-face")) {
				flipCard(activeCard);
			}
		});

		// 键盘快捷键支持
		document.addEventListener("keydown", (event) => {
			if (event.code === "ArrowRight") {
				nextCard();
			} else if (event.code === "ArrowLeft") {
				prevCard();
			} else if (event.code === "Space") {
				event.preventDefault(); // 阻止滚动
				const currentCard = slides[currentIndex]?.querySelector(".flashcard");
				if (currentCard) {
					flipCard(currentCard);
				}
			}
		});

		// 初始化
		updateDisplay();
	});
</script>

<style>
	:root {
		--card-bg: #2d2d2d;
		--text-color: #f5f5f5;
		--light-gray: #e0e0e0;
		--dark-gray: #333;
		--border-radius: 24px;
		--progress-color: #6a6ad4;
	}

	.slideshow-wrapper {
		position: relative;
		width: 100%;
		max-width: 500px;
		height: 400px; /* 增加高度以容纳堆叠效果 */
		margin: 2rem auto;
		display: flex;
		flex-direction: column;
		align-items: center;
		user-select: none; /* 防止文本被选中 */
	}

	.slideshow-header {
		margin-bottom: 1rem;
		text-align: center;
		color: var(--dark-gray);
		font-size: 0.9rem;
	}

	.slideshow-container {
		position: relative;
		width: 100%;
		height: 320px; /* 卡片区域的高度 */
		display: flex;
		align-items: center;
		justify-content: center;
	}

	/* 导航按钮 */
	.slideshow-nav button {
		background: none;
		border: none;
		font-size: 2.5rem;
		cursor: pointer;
		color: var(--progress-color);
		padding: 0 1rem;
		transition: color 0.2s ease;
		z-index: 15; /* 确保按钮在卡片上方 */
	}

	.slideshow-nav button:hover:not(:disabled) {
		color: #4b4baa;
	}

	.slideshow-nav button:disabled {
		color: #ccc;
		cursor: not-allowed;
	}

	.flashcard-stack {
		position: relative;
		width: 350px;
		height: 100%;
		perspective: 1000px;
		/* 移除之前的nth-last-child样式 */
	}

	.flashcard-slide {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		/* opacity 和 transform 将由 JS 动态控制 */
		pointer-events: none; /* 默认不可点击 */
		border-radius: var(--border-radius);
		background-color: transparent;
		transition:
			opacity 0.6s ease-in-out,
			transform 0.6s ease-in-out; /* 添加transform过渡 */
	}

	.flashcard-slide.active {
		pointer-events: auto; /* 激活时可点击 */
	}

	.flashcard {
		width: 100%;
		height: 100%;
		position: relative;
		transition: transform 0.6s;
		transform-style: preserve-3d;
	}

	.flashcard.is-flipped {
		transform: rotateY(180deg);
	}

	.flashcard-face {
		position: absolute;
		width: 100%;
		height: 100%;
		backface-visibility: hidden;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		border-radius: var(--border-radius);
		padding: 1.5rem;
		box-sizing: border-box;
		text-align: center;
		box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
		/* 确保背景色完全不透明，遮盖下层卡片内容 */
	}

	.flashcard-front {
		background-color: var(--card-bg);
		color: var(--text-color);
	}

	.flashcard-back {
		background-color: #6a6ad4;
		color: var(--text-color);
		transform: rotateY(180deg);
	}

	.hint {
		position: absolute;
		bottom: 1.5rem;
		font-size: 0.9rem;
		color: #aaa;
	}

	.congratulations-slide {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		background-color: #fff;
		border-radius: var(--border-radius);
		display: flex;
		align-items: center;
		justify-content: center;
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.6s ease-in-out;
		box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
		background: linear-gradient(135deg, #e0f7fa, #fce4ec);
		z-index: 5; /* 确保在卡片堆叠之下，只有 active 时才显示 */
	}

	.congratulations-slide.active {
		opacity: 1;
		pointer-events: auto;
		z-index: 20; /* 激活时显示在最顶层 */
	}

	.congratulations-content h2 {
		font-size: 2rem;
		color: #333;
	}

	.slideshow-footer {
		width: 100%;
		max-width: 400px;
		display: flex;
		align-items: center;
		justify-content: space-between;
		margin-top: 1rem;
		padding: 0 1rem;
	}

	.progress-bar-container {
		flex-grow: 1;
		height: 6px;
		background-color: #e0e0e0;
		border-radius: 3px;
		overflow: hidden;
		margin: 0 1rem;
	}

	.progress-bar {
		height: 100%;
		background-color: var(--progress-color);
		transition: width 0.3s ease-in-out;
	}

	.card-count {
		font-size: 0.9rem;
		color: #666;
	}

	#reset-button {
		background: none;
		border: none;
		cursor: pointer;
		color: #999;
		transition: color 0.2s ease;
	}

	#reset-button:hover {
		color: #555;
	}
</style>
